@file:Suppress("unused")

package co.csadev.kellocharts.formatter

import co.csadev.kellocharts.model.*
import java.text.DateFormat
import java.util.*
import kotlin.math.roundToLong

private const val nullTerminator = '\u0000'

private fun DateFormat.formatValue(formattedValue: CharArray, value: Float): Int {
    val dateResult = format(Date(value.roundToLong()))
    val dateLength = dateResult.length
    dateResult.mapIndexed { index, c ->
        formattedValue[index] = c
    }
    for (i in dateLength until formattedValue.size) {
        formattedValue[i] = nullTerminator
    }
    return dateLength
}

class DateAxisValueFormatter(private val dateFormat: DateFormat) : AxisValueFormatter {
    override fun formatValueForManualAxis(formattedValue: CharArray, axisValue: AxisValue) =
        dateFormat.formatValue(formattedValue, axisValue.value)

    override fun formatValueForAutoGeneratedAxis(
        formattedValue: CharArray,
        value: Float,
        autoDecimalDigits: Int
    ) = dateFormat.formatValue(formattedValue, value)
}

class DateBubbleChartValueFormatterX(private val dateFormat: DateFormat) :
    BubbleChartValueFormatter {
    override fun formatChartValue(formattedValue: CharArray, value: BubbleValue) =
        dateFormat.formatValue(formattedValue, value.x)
}

class DateBubbleChartValueFormatterY(private val dateFormat: DateFormat) :
    BubbleChartValueFormatter {
    override fun formatChartValue(formattedValue: CharArray, value: BubbleValue) =
        dateFormat.formatValue(formattedValue, value.y)
}

class DateBubbleChartValueFormatterZ(private val dateFormat: DateFormat) :
    BubbleChartValueFormatter {
    override fun formatChartValue(formattedValue: CharArray, value: BubbleValue) =
        dateFormat.formatValue(formattedValue, value.z)
}

class DateColumnChartValueFormatter(private val dateFormat: DateFormat) :
    ColumnChartValueFormatter {
    override fun formatChartValue(formattedValue: CharArray, value: SubcolumnValue) =
        dateFormat.formatValue(formattedValue, value.value)
}

class DateLineChartValueFormatterX(private val dateFormat: DateFormat) : LineChartValueFormatter {
    override fun formatChartValue(formattedValue: CharArray, value: PointValue) =
        dateFormat.formatValue(formattedValue, value.x)
}

class DateLineChartValueFormatterY(private val dateFormat: DateFormat) : LineChartValueFormatter {
    override fun formatChartValue(formattedValue: CharArray, value: PointValue) =
        dateFormat.formatValue(formattedValue, value.y)
}

class DatePieChartValueFormatter(private val dateFormat: DateFormat) : PieChartValueFormatter {
    override fun formatChartValue(formattedValue: CharArray, value: SliceValue) =
        dateFormat.formatValue(formattedValue, value.value)
}
